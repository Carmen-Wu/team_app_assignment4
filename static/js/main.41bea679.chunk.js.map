{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Debits.js","components/Credits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","className","to","src","alt","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","inputField","target","name","inputValue","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","htmlFor","type","onChange","Debits","debits","map","debit","date","slice","amount","description","id","addDebit","Credits","credits","credit","addCredit","App","logInInfo","newUser","currentUser","prevState","Math","random","toString","valueAsNumber","Date","toISOString","newBal","toFixed","a","fetch","then","response","json","debitList","parseFloat","creditList","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41bea679.chunk.js","sourcesContent":["// src/components/AccountBalance.js\n\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  render() {\n    return (\n      <div>\n        Balance: {this.props.accountBalance}\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;","// src/components/Home.js\n// The Home component is used to demonstrate the use of Link.\n\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\nimport './Home.css'; \n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <nav className='navBar'> \n          <ul>\n            <li><Link to=\"/userProfile\">User Profile</Link></li>\n            <li><Link to=\"/login\">Login</Link></li>\n            <li><Link to=\"/debits\">Debits</Link></li>\n            <li><Link to=\"/credits\">Credits</Link></li>\n          </ul>\n        </nav>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n        <h1>Bank of React</h1>\n        <AccountBalance accountBalance={this.props.accountBalance}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;","// src/components/UserProfile.js\n// The UserProfile component is used to demonstrate the use of Route and Link.\n\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n        <div>\n          <nav className='navBar'> \n            <ul>\n              <li><Link to=\"/userProfile\">User Profile</Link></li>\n              <li><Link to=\"/login\">Login</Link></li>\n              <li><Link to=\"/debits\">Debits</Link></li>\n              <li><Link to=\"/credits\">Credits</Link></li>\n            </ul>\n          </nav>\n          <h1>User Profile</h1>\n          <div>Username: {this.props.userName}</div>\n          <div>Member Since: {this.props.memberSince}</div>\n          \n          <Link to=\"/\">Return to Home</Link>\n        </div>\n    );\n  }\n}\n\nexport default UserProfile;","// src/components/Login.js\n// The LogIn component is used to demonstrate the use of Redirect.\n\nimport React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport {Link} from 'react-router-dom';\n\nclass LogIn extends Component {\n  constructor () {  // Create and initialize state\n    super()\n    this.state = {\n      user: {\n        userName: '',\n        password: ''\n      },\n      redirect: false\n    }\n  }\n\n  // When the user name input is changed, capture the input and update the state (user.userName)\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user}\n    const inputField = e.target.name\n    const inputValue = e.target.value\n    updatedUser[inputField] = inputValue\n\n    this.setState({user: updatedUser})\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)\n    this.setState({redirect: true})\n  }\n  \n  render () {\n    if (this.state.redirect) {  // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n      return (<Redirect to=\"/userProfile\"/>)\n    }\n    // Render the login form\n    return (\n      <div>\n        <nav className='navBar'> \n          <ul>\n            <li><Link to=\"/userProfile\">User Profile</Link></li>\n            <li><Link to=\"/login\">Login</Link></li>\n            <li><Link to=\"/debits\">Debits</Link></li>\n            <li><Link to=\"/credits\">Credits</Link></li>\n          </ul>\n        </nav>\n        <h1>Login</h1>\n\n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label htmlFor=\"userName\">User Name</label>\n            <input type=\"text\" name=\"userName\" onChange={this.handleChange} value={this.state.user.userName} />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>                  \n      </div>\n    )\n  }\n}\n\nexport default LogIn","// src/components/Debits.js\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst Debits = (props) => {\n\tlet debitsView = () => {\n    const { debits } = props;\n    return debits.map((debit) => {\n      let date = debit.date.slice(0,10);\n      return <li key={debit.id}>{debit.amount} {debit.description} {date}</li>\n    }) \n  }\n  return (\n    <div>\n      <nav className='navBar'> \n          <ul>\n            <li><Link to=\"/userProfile\">User Profile</Link></li>\n            <li><Link to=\"/login\">Login</Link></li>\n            <li><Link to=\"/debits\">Debits</Link></li>\n            <li><Link to=\"/credits\">Credits</Link></li>\n          </ul>\n        </nav>\n      <h1>Debits</h1>\n      <h2>Balance: {props.accountBalance}</h2> \n      {debitsView()}\n      <form onSubmit={props.addDebit}>\n        <input type=\"text\" name=\"description\" />\n        <input type=\"number\" name=\"amount\" />\n        <button type=\"submit\">Add Debit</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Debits;","// src/components/Credits.js\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst Credits = (props) => {\n\tlet creditsView = () => {\n    const { credits } = props;\n    return credits.map((credit) => {\n      let date = credit.date.slice(0,10);\n      return <li key={credit.id}>{credit.amount} {credit.description} {date}</li>\n    }) \n  }\n  return (\n    <div>\n      <nav className='navBar'> \n          <ul>\n            <li><Link to=\"/userProfile\">User Profile</Link></li>\n            <li><Link to=\"/login\">Login</Link></li>\n            <li><Link to=\"/debits\">Debits</Link></li>\n            <li><Link to=\"/credits\">Credits</Link></li>\n          </ul>\n        </nav>\n      <h1>Credits</h1>\n      <h2>Balance: {props.accountBalance}</h2> \n      {creditsView()}\n      <form onSubmit={props.addCredit}>\n        <input type=\"text\" name=\"description\" />\n        <input type=\"number\" name=\"amount\" />\n        <button type=\"submit\">Add Credit</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Credits;","// src/App.js\n\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Debits from './components/Debits';\nimport Credits from './components/Credits';\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super(); \n    this.state = {\n      accountBalance: 0,\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '07/23/96',\n      },\n      debits: [],\n      credits: [],\n    }\n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser}\n    newUser.userName = logInInfo.userName\n    this.setState({currentUser: newUser})\n  }\n\n  addCredit = (e) => {\n    e.preventDefault(); // prevent the form from submitting\n    const newCredit = (prevState)=> ({ //create newCredit entry \n      credits: [...prevState.credits, //adding previous credit state + new entry to the array that contains id, amount,description, date\n        {id:Math.random().toString(16).slice(2), //generate a random string\n        amount: e.target.amount.valueAsNumber, //set amount equal to the user amount value\n        description: e.target.description.value, //set description equal to the user description value\n        date: new Date().toISOString()}], //set date to the current date\n        })\n    this.setState(newCredit) //set the new entry state\n        //create a new variable called newBal which takes the current balance added by the user amount and previous amount\n    const newBal = (+this.state.accountBalance + e.target.amount.valueAsNumber).toFixed(2)\n    this.setState({accountBalance: newBal}) //set newBal state\n  }\n\n\n  addDebit = (e) => {\n    e.preventDefault(); // prevent the form from submitting\n    const newDebit = (prevState)=> ({ //create newDebit entry \n      debits: [...prevState.debits, //adding previous debit state + new entry to the array that contains id, amount,description, date\n        {id:Math.random().toString(16).slice(2), //generate a random string\n        amount: e.target.amount.valueAsNumber, //set amount equal to the user amount value\n        description: e.target.description.value, //set description equal to the user description value\n        date: new Date().toISOString()}], //set date to the current date\n        })\n    this.setState(newDebit) //set the new entry state\n        //create a new variable called newBal which takes the current balance subtracted by the user amount\n    const newBal = (this.state.accountBalance - e.target.amount.valueAsNumber).toFixed(2)\n    this.setState({accountBalance: newBal}) //set newBal state\n  }\n\n  async componentDidMount(){\n    fetch('https://moj-api.herokuapp.com/debits') //fetch the api \n      .then((response) => response.json()) //if theres a response from api\n      .then(debitList => { //api = debitList\n        this.setState({ debits: debitList});//set debitList to currentstate\n        this.state.debits.map(debit => \n        this.setState({accountBalance : (this.state.accountBalance  - parseFloat(debit.amount)).toFixed(2)}) //map debit to accountBalance by (-) debitAmount\n      )\n    })\n    fetch('https://moj-api.herokuapp.com/credits') //fetch the api \n      .then((response) => response.json()) //if theres a response from api\n      .then(creditList => { //api = creditList\n        this.setState({ credits: creditList});//set creditList to currentstate\n        this.state.credits.map(credit => \n        this.setState({accountBalance : (+this.state.accountBalance  + parseFloat(credit.amount)).toFixed(2)}) //map credit to accountBalance by (-)  creditAmount\n      )\n    })\n}\n  // Create Routes and React elements to be rendered using React components\n  render() {  \n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance}/>);\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince}  />\n    );\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)  // Pass props to \"LogIn\" component\n    const DebitsComponent = () => (<Debits debits = {this.state.debits} //make debits class and sets debits array to this\n                                           addDebit = {this.addDebit} //set the addDebit function to this\n                                           accountBalance = {this.state.accountBalance} />); ///set the accountBalance to this\n    const CreditsComponent = () => (<Credits credits = {this.state.credits} //make credits class and sets credits array to this\n                                            addCredit = {this.addCredit} //set the addCredit function to this\n                                            accountBalance = {this.state.accountBalance} />); ///set the accountBalance to this\n    return (\n      <Router basename=\"/team_app_assignment4\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}